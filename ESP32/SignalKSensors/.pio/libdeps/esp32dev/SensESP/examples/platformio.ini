; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; NOTE: This is an example platformio.ini file to be used as a template for
; derived projects. Do not use the file within the SensESP directory tree but
; instead create a new project in PlatformIO and copy this file and one of the
; example source files there.

[platformio]
;set default_envs to whichever board(s) you use. Build/Run/etc processes those envs
default_envs = 
   esp32dev

[env]
; Global data for all [env:***]
framework = arduino
lib_ldf_mode = deep
monitor_speed = 115200
lib_deps =
; Comment out one of the following two paths that point to the
; SensESP library code.

; This one is the "Release" version - the branch called "latest".
  SignalK/SensESP

; This one has all merged PR's, but is not yet an official "release" version.
; It is the branch called "master". This version is unstable and under continuous
; development and will break without warning. Use it only if you want to
; participate in SensESP development or need to test some yet unreleased feature.
; https://github.com/SignalK/SensESP

;this section has config items common to all ESP32 boards
[espressif32_base]
platform = espressif32
build_unflags = -Werror = reorder
board_build.partitions = min_spiffs.csv
monitor_filters = esp32_exception_decoder

[env:esp32dev]
extends = espressif32_base
board = esp32dev
; Verify that this is the correct pin number for your board!
build_flags = 
   -D LED_BUILTIN = 2
; uncomment and change these if PlatformIO can't auto-detect
; the ports
;upload_port = /dev/tty.SLAB_USBtoUART
;monitor_port = /dev/tty.SLAB_USBtoUART

